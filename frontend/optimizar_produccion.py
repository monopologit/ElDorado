#!/usr/bin/env python3
"""
Script de optimizaci√≥n final para producci√≥n del frontend
Limpia console.log, optimiza c√≥digo y prepara para deploy
"""

import os
import re
from pathlib import Path

def optimize_frontend_for_production():
    """Optimiza el frontend para producci√≥n"""
    frontend_path = Path(__file__).parent
    
    print("üöÄ OPTIMIZACI√ìN FRONTEND PARA PRODUCCI√ìN")
    print("=" * 50)
    
    # 1. Limpiar console.log en producci√≥n
    print("üßπ Limpiando console.log...")
    
    js_files = list(frontend_path.glob("src/**/*.js"))
    console_logs_removed = 0
    
    for js_file in js_files:
        try:
            content = js_file.read_text(encoding='utf-8')
            original_content = content
            
            # Comentar console.log pero mantener console.error
            content = re.sub(
                r'^(\s*)console\.log\(',
                r'\1// console.log(',
                content,
                flags=re.MULTILINE
            )
            
            if content != original_content:
                # Solo escribir si hubo cambios
                js_file.write_text(content, encoding='utf-8')
                console_logs_removed += 1
                print(f"üìù Limpiado: {js_file.name}")
                
        except Exception as e:
            print(f"‚ö†Ô∏è Error procesando {js_file}: {e}")
    
    print(f"‚úÖ {console_logs_removed} archivos optimizados")
    
    # 2. Verificar configuraci√≥n para producci√≥n
    print("\n‚öôÔ∏è Verificando configuraci√≥n...")
    
    api_config_path = frontend_path / "src/config/api.js"
    if api_config_path.exists():
        content = api_config_path.read_text(encoding='utf-8')
        if "localhost" in content:
            print("‚ö†Ô∏è Configuraci√≥n apunta a localhost (desarrollo)")
            print("   Para producci√≥n, cambiar en src/config/api.js:")
            print("   export const API_BASE_URL = 'http://tu-servidor-produccion:8000';")
        else:
            print("‚úÖ Configuraci√≥n lista para producci√≥n")
    
    # 3. Crear script de build
    print("\nüì¶ Preparando para build...")
    
    package_json_path = frontend_path / "package.json"
    if package_json_path.exists():
        print("‚úÖ package.json encontrado")
        print("üèóÔ∏è Para construir para producci√≥n ejecutar:")
        print("   npm run build")
        print("   Esto crear√° una carpeta 'build' optimizada")
    
    print("\n" + "=" * 50)
    print("üéâ OPTIMIZACI√ìN COMPLETADA")
    print("‚úÖ Frontend listo para producci√≥n")
    print("=" * 50)

if __name__ == "__main__":
    optimize_frontend_for_production()
